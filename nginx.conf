# Это пустой блок, необходимый для работы Nginx.
# Увеличим количество одновременных соединений для одного рабочего процесса.
events {
    worker_connections 1024;
}

http {
    # Включаем для оптимизации передачи файлов
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M; # Максимальный размер тела запроса (например, для загрузки файлов)

    # =================================================================
    # БЛОК 1: Перенаправление с HTTP на HTTPS
    # Этот блок ловит все запросы на порт 80 и принудительно
    # перенаправляет их на защищенную версию сайта (https).
    # =================================================================
    server {
        listen 80;
        server_name api.batyrai.com;

        # Этот location нужен для Let's Encrypt (certbot) для обновления сертификатов.
        # Запросы на /.well-known/acme-challenge/ не перенаправляются на https.
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Все остальные запросы перенаправляем с кодом 301 (постоянное перенаправление).
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # =================================================================
    # БЛОК 2: Основная конфигурация для HTTPS
    # Этот блок обрабатывает все запросы, приходящие на защищенный порт 443.
    # =================================================================
    server {
        listen 443 ssl;
        server_name api.batyrai.com;

        # --- Настройки SSL ---
        # Пути к SSL-сертификатам, которые мы пробросили из хост-системы
        ssl_certificate /etc/letsencrypt/live/api.batyrai.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.batyrai.com/privkey.pem;
        # Включаем современные протоколы безопасности
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # --- Маршрутизация (Reverse Proxy) ---

        # Маршрут для AI-ассистента
        # Запросы вида https://api.batyrai.com/api/ask-assistant будут идти сюда.
        location /api/ask-assistant {
            # Проксируем запрос на контейнер batyr-assistant, который слушает порт 8001
            proxy_pass http://batyr-assistant:8001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Маршрут для основного бэкенда
        # Все остальные запросы, начинающиеся с /api/, будут идти сюда.
        # Например: /api/generate, /api/status и т.д.
        location /api/ {
            # Проксируем запрос на контейнер batyr-backend, который слушает порт 8000
            proxy_pass http://batyr-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Можно добавить location для статики, если она будет
        # location /static/ {
        #    alias /app/static/;
        # }
    }
}