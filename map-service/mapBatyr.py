import os
import json
from flask import Flask, jsonify, abort, request, Response
from flask_cors import CORS
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º SDK –æ—Ç Azure
import azure.cognitiveservices.speech as speechsdk

app = Flask(__name__)
CORS(app)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Azure Speech Service –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
# Docker Compose –ø–æ–¥—Å—Ç–∞–≤–∏—Ç –∏—Ö –∏–∑ –≤–∞—à–µ–≥–æ .env —Ñ–∞–π–ª–∞
AZURE_TTS_KEY = os.getenv('AZURE_TTS_KEY')
AZURE_REGION = os.getenv('AZURE_REGION')

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞—Ä—Ç—ã (—ç—Ç–æ—Ç –±–ª–æ–∫ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
DATA_FILE = 'batyrs_data.json'
try:
    with open(DATA_FILE, 'r', encoding='utf-8') as f:
        DB_DATA = json.load(f)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ '{DATA_FILE}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
except Exception as e:
    print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
    exit()

# --- –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–≥–∏–æ–Ω–µ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
@app.route('/<string:region_id>', methods=['GET'])
def get_region_info(region_id):
    print(f"üêå –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω–∞: {region_id}")
    region_data = DB_DATA.get(region_id)
    
    if not region_data:
        return abort(404, description=f"–†–µ–≥–∏–æ–Ω —Å ID '{region_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    
    return jsonify(region_data)

# ‚úÖ‚Üì‚Üì‚Üì –ù–û–í–´–ô –≠–ù–î–ü–û–ò–ù–¢ –î–õ–Ø –û–ó–í–£–ß–ö–ò –ß–ï–†–ï–ó AZURE ‚Üì‚Üì‚Üì‚úÖ
@app.route('/api/tts', methods=['POST'])
def text_to_speech_azure():
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω
    if not all([AZURE_TTS_KEY, AZURE_REGION]):
        print("‚ùå [Azure] –ö–ª—é—á–∏ –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
        return jsonify({"error": "Azure TTS service is not configured on the server."}), 500

    # 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    data = request.get_json()
    text_to_speak = data.get('text')
    if not text_to_speak:
        return jsonify({"error": "No text provided."}), 400

    print(f"üîä [Azure] –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–∑–≤—É—á–∫—É —Ç–µ–∫—Å—Ç–∞: {text_to_speak[:50]}...")

    try:
        # 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Azure
        speech_config = speechsdk.SpeechConfig(subscription=AZURE_TTS_KEY, region=AZURE_REGION)
        
        # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫ –≤ –ø–∞–º—è—Ç—å, –∞ –Ω–µ –≤ —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞ –¥–∏–Ω–∞–º–∏–∫–∏
        audio_config = speechsdk.audio.AudioOutputConfig(use_default_speaker=False, filename=None)

        # –í—ã–±–∏—Ä–∞–µ–º –≥–æ–ª–æ—Å. –î–æ—Å—Ç—É–ø–Ω—ã:
        # 'kk-KZ-DauletNeural' (–º—É–∂—Å–∫–æ–π)
        # 'kk-KZ-AigulNeural' (–∂–µ–Ω—Å–∫–∏–π)
        speech_config.speech_synthesis_voice_name = 'kk-KZ-DauletNeural'

        # 4. –°–æ–∑–¥–∞–µ–º —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞—É–¥–∏–æ
        synthesizer = speechsdk.SpeechSynthesizer(speech_config=speech_config, audio_config=audio_config)
        result = synthesizer.speak_text_async(text_to_speak).get()

        # 5. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if result.reason == speechsdk.ResultReason.SynthesizingAudioCompleted:
            print("‚úÖ [Azure] –ê—É–¥–∏–æ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ.")
            # –ü–æ–ª—É—á–∞–µ–º –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—É–¥–∏–æ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ WAV)
            audio_data = result.audio_data
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
            return Response(audio_data, mimetype='audio/wav')
        
        elif result.reason == speechsdk.ResultReason.Canceled:
            cancellation_details = result.cancellation_details
            print(f"‚ùå [Azure] –°–∏–Ω—Ç–µ–∑ –æ—Ç–º–µ–Ω–µ–Ω: {cancellation_details.reason}")
            if cancellation_details.reason == speechsdk.CancellationReason.Error:
                print(f"‚ùå [Azure] –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {cancellation_details.error_details}")
            return jsonify({"error": "Speech synthesis canceled.", "details": str(cancellation_details)}), 500

    except Exception as e:
        print(f"‚ùå [Azure] –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ TTS: {e}")
        return jsonify({"error": "Internal server error during Azure TTS generation."}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)